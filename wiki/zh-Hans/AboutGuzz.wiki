#labels Featured
= what is guzz? =


== [http://code.google.com/p/guzz/wiki/AboutGuzz?wl=en English Version]                [http://code.google.com/p/guzz/wiki/AboutGuzz?wl=zh-Hans 简体中文版] ==


guzz是一套用来进行快速开发和高性能网站设计的框架，通过ORM、多数据源数据管理、以及通用数据处理，为系统在数据层的设计提供一站式解决方案。用于替代或者补充hibernate或ibatis，并提供更多的大型系统架构设计支持。

guzz的目标是使得大型化网站设计更加简单，团队分工更加明确，框架在使用时更少出问题。主要功能：
 * 现代大规模系统设计，技术上吸收了ibatis/hibernate的优点

 * 支持像hibernate一样的对象持久，映射和方便的增删改查

 * 支持像ibatis一样，让dba参与sql设计的复杂数据库操作和优化

 * 支持在线加载与调试SQL。按照应用策略，从文件/数据库/Web Service等途径，动态提取与使用SQL语句（Dynamic SQL）。
 * 支持应用使用大量的数据库和主从读写分离

 * 支持数据表在多组机器中水平分布（Shard），并自动维护多组机器之间的分布式事务

 * 支持1张表按照业务规则分切成多张小表（Shadow），并支持每张小表拥有自己特殊的属性字段（Custom）。

 * 支持超越范式的特殊关联、非结构化数据等异构资源POJO模式的统一管理

 * 支持组件化服务（SOA），构建企业/项目实施基础平台

 * 提供面向对象的数据库读取标签(JSP Taglib)，加快页面展示层的快速变更、开发与部署

 * 支持配置管理服务器，可以使用一套软件系统对所有应用系统的配置项进行统一管理

== 文档与帮助 ==

 * [TutorialStart Guzz使用手册]

 * [TaglibBook JSP页面开发帮助]

 * [AboutFAQ 常见问题FAQ]

== 示例代码 ==

 * [http://guzz.googlecode.com/files/a%20empty%20sample%20project.zip 基于spring IOC + springMVC的空工程（新项目可以以此为基础搭建）]

 * [DemoExamplesVote 示例工程1]
 

== 反馈与建议 ==

 * [AboutFeedback 反馈与建议]