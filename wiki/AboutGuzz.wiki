#labels Featured

=== [http://code.google.com/p/guzz/wiki/AboutGuzz?wl=en English Version]   ||   [http://code.google.com/p/guzz/wiki/AboutGuzz?wl=zh-Hans 简体中文版] ===

= what is guzz? =

 Guzz is a framework for large-scaled system and rapid development. 

 According to orm, multi-datasources, shard, general data processing, object-oriented database taglib, guzz provides a full-stack solution for data-layer architecture. It can be a good complement or another choice for hibernate and ibatis.

 Guzz's aim is to simplify the design of large-scaled system, clearing the division of team jobs, lessen mistakes in using frameworks.

 Guzz's features:

 * Modern design, experienced on ibatis and hibernate's great favors.
 
 * Like hibernate, you can persist, mapping and query data in a object-oriented way.

 * Like ibatis, you can store complicated sqls in a xml configuration file, and let dbas involved in.

 * Over ibatis, you can also store and load sqls from anywhere(or any system), and use it on fly. Add/delete/test/tune sqls online without a restart. (We call this "Dynamic SQL")
 
 * Support your system to use many database machines without extra codes, and set up master-slave between those machines.

 * Support your system to store different tables among different machines, and maintain a distributed transaction automatically(Shard).

 * Support your system to split a big table into many small ones on your rules(Shadow), and even allow each table owns its special columns(Custom).

 * Support unified POJO styled usage for data with very special conjunction( over "Normal Form"), or between unstructured data( such as from other systems).

 * Support Service-oriented architecture, help you accumulate a fundamental services system. (Yes, not build a fundamental system from scratch, but accumulate one with more and more projects.)

 * Object-oriented database JSP Taglib, fast view-layer's development, maintaining and deployment. (Building pages without writing java codes, very very fast!)

 * Support for Configuration System. Help you manage all configurations among different systems in a central system.

== Doc & Help ==

 * [TutorialStart Developer Guide]

 * [TaglibBook Manual for Guzz JSP Taglib]

 * [AboutFAQ User FAQ]

== Samples ==

 * [http://guzz.googlecode.com/files/a%20empty%20sample%20project.zip A Empty Project based on spring IOC and springMVC. (New Projects are nice to start from here)]

 * [DemoExamplesVote Example 1: Vote System]

== Feedback ==

 * [AboutFeedback Feedback & Suggestions]
 