== 概念介绍 ==

 动态SQL（Dynamic SQL）不是指应用程序动态的拼接SQL语句，动态SQL是指应用程序可以动态的获取配置好的SQL语句。在获取的过程中，SQL语句如何管理，完全由应用系统自己决定。

 换句话说，在ibatis中，sql语句配置到ibatis.xml文件中，在guzz中，配置到guzz.xml中。但当配置完成后，在系统运行期间这些sql都是不能变动的，如果需要添加1个sql或者修改优化1个sql语句，必须重启应用才能生效。而动态SQL允许应用系统动态的管理（添加/修改/优化/删除）sql语句以及sql映射关系，对于SQL的变更不再需要重启应用系统，降低维护成本。

== 应用场景 ==

 动态SQL主要有两种应用场景：SQL优化和动态数据源。

*SQL优化：* 当发现某些SQL存在性能隐患时，用新优化的SQL在线替换旧的SQL语句。动态SQL允许配置策略，允许动态配置的SQL覆盖guzz.xml中定义的SQL；这样开发时依然按照传统模式，需要修改SQL时，配置1条动态SQL在线覆盖guzz.xml中的定义，无需重启系统完成升级。

*提供动态数据源：* 这是一种比较新的设计模式，适合页面经常变动或者对外提供各式各样经常变化数据的系统。主要设计与使用模式：当系统添加新功能时，动态配置1条新的sql语句和映射（如上传1个新的sql文件），通过一个统一的servelt按照页面传入的id，参数，分页信息等（读取sql文件，id就是文件名）完成查询并将结果转为json/xml返给调用者处理（如AJAX前端页面），避免后台开发和部署。在这个过程中，动态SQL根据id读取sql文件并进行解析，然后按照页面传入的参数进行命名查询，返回结果。

有时候两种场景也可能混合使用，场景一为场景二的子集。下面以第二种场景为例说明动态SQL如何使用。